// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: .proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.transferclipboard.backend.protobuf;

@kotlin.jvm.JvmName("-initializetransferQueryAllResponse")
public inline fun transferQueryAllResponse(block: com.transferclipboard.backend.protobuf.TransferQueryAllResponseKt.Dsl.() -> kotlin.Unit): com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse =
  com.transferclipboard.backend.protobuf.TransferQueryAllResponseKt.Dsl._create(com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protobuf.TransferQueryAllResponse`
 */
public object TransferQueryAllResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse = _builder.build()

    /**
     * `.protobuf.TransferQueryAllResponse.DataType type = 1;`
     */
    public var type: com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.DataType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * `.protobuf.TransferQueryAllResponse.DataType type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `.protobuf.TextList texts = 2;`
     */
    public var texts: com.transferclipboard.backend.protobuf.ProtobufData.TextList
      @JvmName("getTexts")
      get() = _builder.getTexts()
      @JvmName("setTexts")
      set(value) {
        _builder.setTexts(value)
      }
    /**
     * `.protobuf.TextList texts = 2;`
     */
    public fun clearTexts() {
      _builder.clearTexts()
    }
    /**
     * `.protobuf.TextList texts = 2;`
     * @return Whether the texts field is set.
     */
    public fun hasTexts(): kotlin.Boolean {
      return _builder.hasTexts()
    }

    /**
     * `.protobuf.ImageList images = 3;`
     */
    public var images: com.transferclipboard.backend.protobuf.ProtobufData.ImageList
      @JvmName("getImages")
      get() = _builder.getImages()
      @JvmName("setImages")
      set(value) {
        _builder.setImages(value)
      }
    /**
     * `.protobuf.ImageList images = 3;`
     */
    public fun clearImages() {
      _builder.clearImages()
    }
    /**
     * `.protobuf.ImageList images = 3;`
     * @return Whether the images field is set.
     */
    public fun hasImages(): kotlin.Boolean {
      return _builder.hasImages()
    }

    /**
     * `.protobuf.FileList files = 4;`
     */
    public var files: com.transferclipboard.backend.protobuf.ProtobufData.FileList
      @JvmName("getFiles")
      get() = _builder.getFiles()
      @JvmName("setFiles")
      set(value) {
        _builder.setFiles(value)
      }
    /**
     * `.protobuf.FileList files = 4;`
     */
    public fun clearFiles() {
      _builder.clearFiles()
    }
    /**
     * `.protobuf.FileList files = 4;`
     * @return Whether the files field is set.
     */
    public fun hasFiles(): kotlin.Boolean {
      return _builder.hasFiles()
    }
    public val dataCase: com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.DataCase
      @JvmName("getDataCase")
      get() = _builder.getDataCase()

    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse.copy(block: com.transferclipboard.backend.protobuf.TransferQueryAllResponseKt.Dsl.() -> kotlin.Unit): com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponse =
  com.transferclipboard.backend.protobuf.TransferQueryAllResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponseOrBuilder.textsOrNull: com.transferclipboard.backend.protobuf.ProtobufData.TextList?
  get() = if (hasTexts()) getTexts() else null

public val com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponseOrBuilder.imagesOrNull: com.transferclipboard.backend.protobuf.ProtobufData.ImageList?
  get() = if (hasImages()) getImages() else null

public val com.transferclipboard.backend.protobuf.ProtobufData.TransferQueryAllResponseOrBuilder.filesOrNull: com.transferclipboard.backend.protobuf.ProtobufData.FileList?
  get() = if (hasFiles()) getFiles() else null

