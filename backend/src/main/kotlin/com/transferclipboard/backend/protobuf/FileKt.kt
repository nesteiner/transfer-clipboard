// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: .proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.transferclipboard.backend.protobuf;

@kotlin.jvm.JvmName("-initializefile")
public inline fun file(block: com.transferclipboard.backend.protobuf.FileKt.Dsl.() -> kotlin.Unit): com.transferclipboard.backend.protobuf.ProtobufData.File =
  com.transferclipboard.backend.protobuf.FileKt.Dsl._create(com.transferclipboard.backend.protobuf.ProtobufData.File.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `protobuf.File`
 */
public object FileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.transferclipboard.backend.protobuf.ProtobufData.File.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.transferclipboard.backend.protobuf.ProtobufData.File.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.transferclipboard.backend.protobuf.ProtobufData.File = _builder.build()

    /**
     * `uint32 id = 1;`
     */
    public var id: kotlin.Int
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `uint32 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `string name = 2;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * `string name = 2;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `string path = 3;`
     */
    public var path: kotlin.String
      @JvmName("getPath")
      get() = _builder.getPath()
      @JvmName("setPath")
      set(value) {
        _builder.setPath(value)
      }
    /**
     * `string path = 3;`
     */
    public fun clearPath() {
      _builder.clearPath()
    }

    /**
     * `string size = 4;`
     */
    public var size: kotlin.String
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * `string size = 4;`
     */
    public fun clearSize() {
      _builder.clearSize()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.transferclipboard.backend.protobuf.ProtobufData.File.copy(block: com.transferclipboard.backend.protobuf.FileKt.Dsl.() -> kotlin.Unit): com.transferclipboard.backend.protobuf.ProtobufData.File =
  com.transferclipboard.backend.protobuf.FileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

